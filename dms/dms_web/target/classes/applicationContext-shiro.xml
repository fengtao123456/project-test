<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <!-- 配置apache安全管理器-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--配置一个realm，到数据库中获取权限数据-->
        <property name="realm" ref="myRealm1"></property>
    </bean>

    <!--配置realm:自定义一个realm,这个类必需实现org.apache.shiro.realm.Realm接口-->
    <bean name="myRealm1" class="cn.newyork.dms.shiro.realm.JpaRealm">
        <property name="credentialsMatcher">
            <!--设置加密匹配方案-->
            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                <!-- 编码的方式使用:md5 -->
                <property name="hashAlgorithmName" value="MD5"/>
                <!-- 编码的次数:10 -->
                <property name="hashIterations" value="10"/>
            </bean>
        </property>

    </bean>

    <!-- shiro bean 管理注解和生命周期 -->
    <!-- 3.lifecycleBeanPostProcessor：可以自动调用在Spring Ioc窗口中 Shiro bean的生成周期方法 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <!-- 4.启动ioc容器中使用 shiro的注解，但是必需配置在Spring Ioc容器中Shiro bean的生成周期方法 -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!-- shiro的配置:(权限拦截的配置) 真实过滤器 备注 id和代理过滤器一致-->

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <!-- 登录的url,如果没有登录，你访问的路径会跳到这个页面 -->
        <property name="loginUrl" value="/login"/>
        <!-- 登录成功的url,如果登录成功，会跳转到这个页面 -->
        <property name="successUrl" value="/util/main"/>
        <!-- 没有权限时跳转到这个位置 -->
        <property name="unauthorizedUrl" value="/WEB-INF/views/unauthorized.jsp"/>




        <!-- map的方式操作权限 filterChainDefinitionMap LinkedHashMap-->
        <property name="filterChainDefinitionMap" ref="filterChainDefinitionBean"></property>
        <!-- 引用自定义的权限过滤器 -->
        <property name="filters">
            <map>
                <!--注意key的值要与map中的一致：mp.put(permission.getUrl(), "yxbPerms["+permission.getSn()+"]")-->
                <entry key="dmsPerms" value-ref="yxbPermissionsAuthorizationFilter"></entry>
            </map>
        </property>


    </bean>
    <!-- 配置自定义权限过滤器 -->
    <bean id="yxbPermissionsAuthorizationFilter" class="cn.newyork.dms.shiro.filter.ItsourceYxbPermissionsAuthorizationFilter"></bean>
    <!-- 调用方法-->
    <bean id="filterChainDefinitionBean" factory-bean="filterChainDefinitionMapBean" factory-method="createFilterChainDefinitionMap"></bean>
    <!-- 普通bean-->
    <bean id="filterChainDefinitionMapBean" class="cn.newyork.dms.shiro.realm.FilterChainDefinitionMapBuilder"></bean>
</beans>